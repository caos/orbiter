// Code generated by goderive DO NOT EDIT.

package main

import (
	executables "github.com/caos/orbos/internal/executables"
)

// deriveJoinPackables listens on all input channels c0 and c1, and sends all their results onto the single output channel.
func deriveJoinPackables(c0 <-chan executables.PackableTuple, c1 <-chan executables.PackableTuple) <-chan executables.PackableTuple {
	out := make(chan executables.PackableTuple)
	go func() {
		for c0 != nil || c1 != nil {
			select {
			case v0, ok0 := <-c0:
				if !ok0 {
					c0 = nil
				} else {
					out <- v0
				}
			case v1, ok1 := <-c1:
				if !ok1 {
					c1 = nil
				} else {
					out <- v1
				}
			}
		}
		close(out)
	}()
	return out
}
